01. Find first set bit
Math.log10(n&-n)/Math.log10(2) + 1

02. Rightmost different bit
same as 1 m^n, in place of n

03. Check whether K-th bit is set or not
if ((n & (1 <<k)) != 0)
            System.out.print("SET");
        else
            System.out.print("NOT SET");

04. Count total set bits
brian kurningham

05. Bit Difference
similar

06. Number is sparse or not
n&(n>>1)

07. Longest Consecutive 1's
while n is not zero
n&(n>>1) , cnt++

08. Binary To Gray Code equivalent


09. Gray to Binary equivalent


10. Power of 2
return (x>0 && (n&(n-1) == 0)

11. Swap all odd and even bits


12. Maximum AND Value
